import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { chartsService } from './charts.service';
import { Http, RequestOptions, Headers, Response } from '@angular/http';
import { Observable, Subject } from 'rxjs/Rx';
import { ModalDirective } from 'ng2-bootstrap/modal/modal.component';
import * as _ from "lodash";
declare var $: any;
var that;
@Component({
  templateUrl: 'charts.component.html'
  
})
export class chartsComponent implements OnInit {
    public categories: any = [];
     public userTable: any;
      public showTable: boolean = false;
   public categoryTable: any;
 clientdata: any = {};
  deleteUser: any = {};

  successStatus:boolean=false;
  failStatus:boolean=false;
  EditsuccessStatus:boolean=false;
  EditfailStatus:boolean=false;
    DeleteStatus:boolean=false;

 
 username;
 usernameStatus:boolean=true;
  password;
 passwordStatus:boolean=true;
 email;
 emailStatus:boolean=true;
 firstname;
 firstnameStatus:boolean=true;
  lastname;
 lastnameStatus:boolean=true;
  mobile;
 mobileStatus:boolean=true;
public model: any = {};
public model2: any = {};
public updateData: any = {};
 clients;

 private usernameStatusError :boolean=false;
 private passwordStatusError :boolean=false;
 private emailStatusError :boolean=false;
  private firstnameStatusError :boolean=false;
   private lastnameStatusError :boolean=false;
   private mobileStatusError :boolean=false;

 private validationStatus :boolean=false;

 
  
   constructor( private router: Router,private DashboardService: chartsService, private http: Http, private cdrf: ChangeDetectorRef) {
 this.router=router;
  that = this;
 }

  



  ngOnInit(): void {
      $( "#datepicker" ).datepicker();  
      this.getAllCategories(localStorage.getItem('userId')).then((data) => {
     });
 
  }


    getAllCategories(id) {
    return new Promise((resolve, reject) => {
      this.categories = [];
      if (this.categoryTable) {
        this.categoryTable.destroy();
      }
      this.DashboardService.getAllCategories(localStorage.getItem('userId')).subscribe(data => {
        this.categories = data;
        console.log(this.categories);
        this.showTable = true;
        this.cdrf.detectChanges();
        this.categoryTable = $('#categoryTable').DataTable({
          responsive: false,
          "pagingType": "full_numbers",
        });
        this.cdrf.detectChanges();
         resolve(data.result);
      })
    })
  }

 


  addclient(model)
{
     model.usertype = 1;
     var date = $("#datepicker").datepicker("getDate");
     var dob = $.datepicker.formatDate("yy-mm-dd", date);
     model.dob = dob;
     var id=localStorage.getItem('userId');
     this.DashboardService.add(model,id).subscribe(data => {
      
        if(data.success=="true"){  
          this.successStatus=true;
          document.getElementById("datepickerholder").style.display = "none";
          document.getElementById("clientsave").style.display = "none";
          setTimeout(function(){ 

             location.reload();
           },1000);
         
          

        }
        else{
             
              this.failStatus=true;
        }
       
      
      });

 

}




}
